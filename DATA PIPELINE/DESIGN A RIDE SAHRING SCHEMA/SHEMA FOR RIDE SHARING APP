HOW WOULD YOU DESIGN A DATA BASE FOR RIDE SHARING APP BETWEEN RIDER AND DRIVERS?
*************************************  *************************************  ************************************  *************************
HOW WILL YOU JOIN TABLES AND SCHEMA?

*************************************  *************************************  ************************************  *************************

BACKEND-
TABLE1_ FOR OPTIMAZIATION

TABLE2_ ANALYTICS AND MACHINE LEARNING
WE WILL BE USING NOSQL eg:mongo db,dynamo db
so that we can scale the storage b/c in sql there is physical limitation for data  and latency of no sql is sigle digit(10ms).

TRANSACTIONAL TABLE {
TRIP ID,EVENT TIMESTAMP
}


RIDER{
RIDER ID,LATTITUDE,LONGITUDE,NAME
}

DRIVER{
DRIVER ID,VEHICLE ID,NAME,LATTITUDE,LONGITUDE,AVERAGE RATING
}

VEHICLE{
VEHICLE ID,DRIVER ID, VEHICLE NO,ON_REG_NAME
}
**********************   *************************  ***********************************  ***************************** *******************
TABLE2_
QUERIES:
1.AVERAGE NO OF USER PER DAY
2.PREDICT NO OF RIDER PER DAY IN A CITY
3.DAILY ACTIVE USERS


OPTIMIZING:

REGIONALIZE_TABLE1->UNIFIED DENORMALIZED TABLE
REGIONALIZE_TABLE2
REGIONALIZE_TABLE3


GRANUALIRITY(LEVEL/SCALE OF DETAIL):
TRIP ID,EVENT TIMESTAMP(UNIQUE KEY).

FOR EACH TRIP ID CREATE DENORMALIZED TABLE-
UNIFIED DENORMALIZED TABLE(N:1)-
UNIQUE KEY:TRIP ID

DIMENSION: THE THINGS WE ARE GOING TO MEASURE ABOUT SOMETHING(ANYTHING FROM THAT DIMENSION)-
EG:USERS,DRIVER,VEHICLE,DATE

FACTS:PAYMENT,TRIP(WHAT THINGS)

TRIP:MOST RECENT RECORDS OF THE TRIP
UNIQUE KEY:TRIP ID,
PARTITION KEY:START_DATE,ORIGIN CITY

SORT KEY/ON BASED OF --:FROM CUSTOMER SIDE QUERY.
****************   *************************  *******************************  *****************************   ****************************
ANALYTICS:

SELECT COUNT(TRIP ID) FROM TRIPS WHERE CITY='KOLKATA' BETWEEN CURRNET_DATE AND CURRENT_DATE-365
MACHINE LEARNING WILL DIMENSIONAL TABLE.








